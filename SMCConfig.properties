modelsFolderName=models

# Accepted network strings: DeltaIoTv1, DeltaIoTv2
simulationNetwork=DeltaIoTv1
requirements=energyConsumption, packetLoss, latency

# NOTE: depending on the network, change the quality models below accordingly

# Models for DeltaIoTv1
energyConsumption.modelFileName=EnergyConsumption.xml
energyConsumption.type=simulation
energyConsumption.totalSimulations=1

packetLoss.modelFileName=PacketLoss-SMC.xml
packetLoss.type=probability
packetLoss.alpha=0.10
packetLoss.epsilon=0.01

latency.modelFileName=LatencyWithoutPackets.xml
latency.type=simulation
latency.totalSimulations=1
distributionGap=20
initialKeys=2_4;3_1;4_1;5_9;6_4;7_2;7_3;8_1;9_1;10_5;10_6;11_7;12_3;12_7;13_11;14_12;15_12
detectionMethod=ARIMA
#alt = DeepAnT

Models for DeltaIoTv2
# energyConsumption.modelFileName=EnergyConsumption_DeltaIoTv2.xml
# energyConsumption.type=simulation
# energyConsumption.totalSimulations=1

# packetLoss.modelFileName=PacketLoss-SMC_DeltaIoTv2.xml
# packetLoss.type=probability
# packetLoss.alpha=0.10
# packetLoss.epsilon=0.01

# latency.modelFileName=LatencyWithoutPackets_DeltaIoTv2.xml
# latency.type=simulation
# latency.totalSimulations=1
# distributionGap=34

# ================
# General settings
# ================
amountOfLearningCycles=1
amountOfCycles=500
mitigation=false
rssiConfirmation=false
# startAttackCycle=10
# endAttackCycle=13
learnerPort=5000

# the channel config mode (BASIC = 3 channels, INTERMEDIATE = 5 channels, FULL = 8 channels) , will extend channel usage in case of jamming attack
channelConfigMode=SINGLE
singleChannelMode=true
mitigationChannelConfigMode=BASIC

#The amount of seconds a single adaptation cycle can take
cappedVerificationTime=570

#enabling this will add 'cappedVerificationTime' constraint on both approaches
verificationTimeConstraint=True

# Possible run modes:
#   - machinelearning:      Regular mode (only use positively predicted (and explored) configurations for verification)
#   - activforms:           Traditional ActivFORMS (formal verification of all options)
#   - comparison:           Compares classification and regression methods (before and after learning)
runMode=activforms


# Goals of the simulator
targets=packetLoss, latency
operators=<,<
thressholds=10, 5


##############################################################################

# Possible task types:
#   - classification:       Classification with a single packet loss goal
#   - regression:           Regression with a single packet loss goal
#   - plLaClassification:   Classification with a packet loss and latency goal
#   - plLaRegresssion:      Regression with a packet loss and latency goal
#taskType=plLaRegression
# Displaying time stamps in the format HH-MM-SS or just milliseconds
#readableTimeFormat=false
# Boolean which indicates if previously trained models should be kept or deleted
#deletePreviousModels=true
#Percentage which indicates how many adaptation options should be explored in case of multiple goals
#explorationPercentage=0.05
